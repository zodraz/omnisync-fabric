{"name":"OmniSync_DF_DFL_100_Bronze_ExtractContoso","ppdf:dataflowId":"da92df94-ff96-4480-9e84-ca5cb493613c","ppdf:owner":{"tenantId":"4f5d44e6-db5c-40c0-a4d6-c0fd8d824e15","userId":"05f9dbf8-3e61-43a5-8ae6-a57ece430f3e"},"ppdf:fastCopy":true,"version":"1.0","culture":"en-US","modifiedTime":"2025-03-03T00:33:35.7418286+00:00","ppdf:outputFileFormat":"Parquet","pbi:mashup":{"fastCombine":false,"allowNativeQueries":true,"queriesMetadata":{"DimChannel":{"queryId":"dea7dce9-4814-408e-998f-bf8307d0a50a","queryName":"DimChannel"},"DimCurrency":{"queryId":"bf131098-228a-4329-8cd5-ba3b5d941d96","queryName":"DimCurrency"},"DimCustomer":{"queryId":"b68de526-d1c8-4e0c-b176-c49ca69ac6cf","queryName":"DimCustomer"},"DimDate":{"queryId":"aa49440f-e7ee-478e-b1e7-987d7b5ec978","queryName":"DimDate"},"DimGeography":{"queryId":"a797238e-10ed-4ec6-a353-eb7a6a5609da","queryName":"DimGeography"},"DimProduct":{"queryId":"4dc2acec-2ebb-4bd9-ae91-ef3025754995","queryName":"DimProduct"},"DimProductCategory":{"queryId":"0653b2e0-9b6c-4790-8574-81628139abb1","queryName":"DimProductCategory"},"DimProductSubcategory":{"queryId":"fa9c2124-6436-47e1-84e1-412d26064362","queryName":"DimProductSubcategory"},"DimPromotion":{"queryId":"129dac91-bada-4bad-898e-bdc8f27cc57c","queryName":"DimPromotion"},"DimStore":{"queryId":"cc809ab6-a408-4df2-be0c-a8720e8043c0","queryName":"DimStore"},"FactOnlineSales":{"queryId":"5df346f3-b297-41aa-9a7d-33d6df1bcca3","queryName":"FactOnlineSales"},"DefaultDestination":{"queryId":"1bdb6c14-b5c6-4853-aad9-fd859fa81ce4","queryName":"DefaultDestination"},"DimChannel_DataDestination":{"queryId":"839cc93f-a32b-4176-b023-6743436ac231","queryName":"DimChannel_DataDestination"},"DimChannel_WriteToDataDestination":{"queryId":"f781dfe9-7a1d-4387-94a1-30264063aa85","queryName":"DimChannel_WriteToDataDestination"},"DimChannel_TransformForWriteToDataDestination":{"queryId":"9f2ce5dc-686d-4764-a2d7-076fe681dfed","queryName":"DimChannel_TransformForWriteToDataDestination"},"DefaultStaging":{"queryId":"985bc2f0-b213-483d-986b-dd9a6c123dda","queryName":"DefaultStaging"},"FastCopyStaging":{"queryId":"e1e19e3a-0b8f-4348-82cd-92f9bf87a702","queryName":"FastCopyStaging"},"DimCurrency_DataDestination":{"queryId":"44bcd2b2-d9c7-43d8-a20d-792de430ff76","queryName":"DimCurrency_DataDestination"},"DimCurrency_WriteToDataDestination":{"queryId":"96289913-2827-42fb-b281-8f8d40654fa5","queryName":"DimCurrency_WriteToDataDestination"},"DimCurrency_TransformForWriteToDataDestination":{"queryId":"17346f94-951e-4c86-8b50-e045f67c530f","queryName":"DimCurrency_TransformForWriteToDataDestination"},"DimCustomer_DataDestination":{"queryId":"3885630b-5ccd-4e2b-aa91-53e5628bcfa0","queryName":"DimCustomer_DataDestination"},"DimCustomer_WriteToDataDestination":{"queryId":"c6947c8d-0a44-44c1-84d9-34f5150cf8e5","queryName":"DimCustomer_WriteToDataDestination"},"DimCustomer_TransformForWriteToDataDestination":{"queryId":"19ff81d5-eebd-4d8e-9cb8-691ae416bdf9","queryName":"DimCustomer_TransformForWriteToDataDestination"},"DimDate_DataDestination":{"queryId":"425641e4-e24f-4569-ad6b-67329eec68d8","queryName":"DimDate_DataDestination"},"DimDate_WriteToDataDestination":{"queryId":"b19518e0-7326-40ea-b5a5-1880a1b12fef","queryName":"DimDate_WriteToDataDestination"},"DimDate_TransformForWriteToDataDestination":{"queryId":"f5f0db3c-bbd1-45c6-9c00-fc19c88df12e","queryName":"DimDate_TransformForWriteToDataDestination"},"DimGeography_DataDestination":{"queryId":"8d708d17-9b16-464d-ada9-aa93e74f4480","queryName":"DimGeography_DataDestination"},"DimGeography_WriteToDataDestination":{"queryId":"3a68b4db-0849-42ba-a8e9-2b9bddba6e96","queryName":"DimGeography_WriteToDataDestination"},"DimGeography_TransformForWriteToDataDestination":{"queryId":"90bfaf72-0509-496e-957a-1375af7ddaea","queryName":"DimGeography_TransformForWriteToDataDestination"},"DimProduct_DataDestination":{"queryId":"460a4760-97ee-4688-9511-3eb8074f5322","queryName":"DimProduct_DataDestination"},"DimProduct_WriteToDataDestination":{"queryId":"dd34bea8-add1-4ba8-b0e8-27289fc7ba66","queryName":"DimProduct_WriteToDataDestination"},"DimProduct_TransformForWriteToDataDestination":{"queryId":"a7be5afb-6413-4bb2-9aa6-264da270bd1c","queryName":"DimProduct_TransformForWriteToDataDestination"},"DimProductCategory_DataDestination":{"queryId":"0b52c2ed-0938-45d8-8583-775190428371","queryName":"DimProductCategory_DataDestination"},"DimProductCategory_WriteToDataDestination":{"queryId":"ce8844c3-b5d6-4c0b-9c32-ba7649f45656","queryName":"DimProductCategory_WriteToDataDestination"},"DimProductCategory_TransformForWriteToDataDestination":{"queryId":"16fb3392-b4ce-483c-9ae1-1bc087c519b5","queryName":"DimProductCategory_TransformForWriteToDataDestination"},"DimProductSubcategory_DataDestination":{"queryId":"38611494-bc8b-4dc0-8e47-d1c6e36687b3","queryName":"DimProductSubcategory_DataDestination"},"DimProductSubcategory_WriteToDataDestination":{"queryId":"01568994-f245-413e-a33e-7a7740aab01f","queryName":"DimProductSubcategory_WriteToDataDestination"},"DimProductSubcategory_TransformForWriteToDataDestination":{"queryId":"eaf9788d-aba1-41f0-9dd9-9de4a6280860","queryName":"DimProductSubcategory_TransformForWriteToDataDestination"},"DimPromotion_DataDestination":{"queryId":"67737f55-d597-4cad-ae99-9a5c487ca7de","queryName":"DimPromotion_DataDestination"},"DimPromotion_WriteToDataDestination":{"queryId":"68e0122f-aa8c-42d4-87dd-9e1e8d6c8e6c","queryName":"DimPromotion_WriteToDataDestination"},"DimPromotion_TransformForWriteToDataDestination":{"queryId":"f57c530e-468d-4667-8109-cd2b4655a2f7","queryName":"DimPromotion_TransformForWriteToDataDestination"},"DimStore_DataDestination":{"queryId":"86510012-2f43-4ed0-b796-b3d9b4c14693","queryName":"DimStore_DataDestination"},"DimStore_WriteToDataDestination":{"queryId":"e31f6730-d11a-418d-9b77-3a6c948ed7ec","queryName":"DimStore_WriteToDataDestination"},"DimStore_TransformForWriteToDataDestination":{"queryId":"a1066c4a-049f-452e-a85c-7a4203f6eedd","queryName":"DimStore_TransformForWriteToDataDestination"},"FactOnlineSales_DataDestination":{"queryId":"aa458583-6dd6-4257-b004-9dbea035dc34","queryName":"FactOnlineSales_DataDestination"},"FactOnlineSales_WriteToDataDestination":{"queryId":"df745902-6380-4743-ab61-2c596af2fbfd","queryName":"FactOnlineSales_WriteToDataDestination"},"FactOnlineSales_TransformForWriteToDataDestination":{"queryId":"0fe35c51-a5ca-4ba7-bde0-5c9347fb9455","queryName":"FactOnlineSales_TransformForWriteToDataDestination"}},"document":"section Section1;\r\nshared DimChannel = let\r\n  Source = Sql.Database(\"AbelPC\\SQLEXPRESS\", \"ContosoRetailDW\"),\r\n  #\"Navigation 1\" = Source{[Schema = \"dbo\", Item = \"DimChannel\"]}[Data]\r\nin\r\n  #\"Navigation 1\";\r\nshared DimCurrency = let\r\n  Source = Sql.Database(\"AbelPC\\SQLEXPRESS\", \"ContosoRetailDW\"),\r\n  #\"Navigation 1\" = Source{[Schema = \"dbo\", Item = \"DimCurrency\"]}[Data]\r\nin\r\n  #\"Navigation 1\";\r\nshared DimCustomer = let\r\n  Source = Sql.Database(\"AbelPC\\SQLEXPRESS\", \"ContosoRetailDW\"),\r\n  #\"Navigation 1\" = Source{[Schema = \"dbo\", Item = \"DimCustomer\"]}[Data]\r\nin\r\n  #\"Navigation 1\";\r\nshared DimDate = let\r\n  Source = Sql.Database(\"AbelPC\\SQLEXPRESS\", \"ContosoRetailDW\"),\r\n  #\"Navigation 1\" = Source{[Schema = \"dbo\", Item = \"DimDate\"]}[Data]\r\nin\r\n  #\"Navigation 1\";\r\nshared DimGeography = let\r\n  Source = Sql.Database(\"AbelPC\\SQLEXPRESS\", \"ContosoRetailDW\"),\r\n  #\"Navigation 1\" = Source{[Schema = \"dbo\", Item = \"DimGeography\"]}[Data]\r\nin\r\n  #\"Navigation 1\";\r\nshared DimProduct = let\r\n  Source = Sql.Database(\"AbelPC\\SQLEXPRESS\", \"ContosoRetailDW\"),\r\n  #\"Navigation 1\" = Source{[Schema = \"dbo\", Item = \"DimProduct\"]}[Data]\r\nin\r\n  #\"Navigation 1\";\r\nshared DimProductCategory = let\r\n  Source = Sql.Database(\"AbelPC\\SQLEXPRESS\", \"ContosoRetailDW\"),\r\n  #\"Navigation 1\" = Source{[Schema = \"dbo\", Item = \"DimProductCategory\"]}[Data]\r\nin\r\n  #\"Navigation 1\";\r\nshared DimProductSubcategory = let\r\n  Source = Sql.Database(\"AbelPC\\SQLEXPRESS\", \"ContosoRetailDW\"),\r\n  #\"Navigation 1\" = Source{[Schema = \"dbo\", Item = \"DimProductSubcategory\"]}[Data]\r\nin\r\n  #\"Navigation 1\";\r\nshared DimPromotion = let\r\n  Source = Sql.Database(\"AbelPC\\SQLEXPRESS\", \"ContosoRetailDW\"),\r\n  #\"Navigation 1\" = Source{[Schema = \"dbo\", Item = \"DimPromotion\"]}[Data]\r\nin\r\n  #\"Navigation 1\";\r\nshared DimStore = let\r\n  Source = Sql.Database(\"AbelPC\\SQLEXPRESS\", \"ContosoRetailDW\"),\r\n  #\"Navigation 1\" = Source{[Schema = \"dbo\", Item = \"DimStore\"]}[Data]\r\nin\r\n  #\"Navigation 1\";\r\nshared FactOnlineSales = let\r\n  Source = Sql.Database(\"AbelPC\\SQLEXPRESS\", \"ContosoRetailDW\"),\r\n  #\"Navigation 1\" = Source{[Schema = \"dbo\", Item = \"FactOnlineSales\"]}[Data]\r\nin\r\n  #\"Navigation 1\";\r\nshared DefaultDestination = let\r\n  Source = Lakehouse.Contents([CreateNavigationProperties = false]),\r\n  #\"Navigation 1\" = Source{[workspaceId = \"6b35ae7a-875a-4e1a-8f60-9f0a22d0e0d0\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[lakehouseId = \"4091faae-0bfd-4c88-84fe-efd3155983b6\"]}[Data]\r\nin\r\n  #\"Navigation 2\";\r\nshared DimChannel_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[ItemKind = \"Table\", Id = \"DimChannel\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[ChannelKey = nullable Int32.Type, ChannelLabel = nullable Text.Type, ChannelName = nullable Text.Type, ChannelDescription = nullable Text.Type, ETLLoadID = nullable Int32.Type, LoadDate = nullable DateTime.Type, UpdateDate = nullable DateTime.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared DimChannel_WriteToDataDestination = let\r\n  DimChannel_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = DimChannel_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], DimChannel_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  DimChannel_WriteToDataDestination;\r\nshared DimChannel_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(DimChannel, {\"ChannelKey\", \"ChannelLabel\", \"ChannelName\", \"ChannelDescription\", \"ETLLoadID\", \"LoadDate\", \"UpdateDate\"})\r\nin\r\n    SourceTable;\r\nshared DefaultStaging = let\r\n  DefaultStaging = Pipeline.DefaultModelStorage()\r\nin\r\n  DefaultStaging;\r\nshared FastCopyStaging = let\r\n  FastCopyStaging = Pipeline.FastCopyModelStorage(DefaultStaging, [Required = false])\r\nin\r\n  FastCopyStaging;\r\nshared DimCurrency_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[ItemKind = \"Table\", Id = \"DimCurrency\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[CurrencyKey = nullable Int32.Type, CurrencyLabel = nullable Text.Type, CurrencyName = nullable Text.Type, CurrencyDescription = nullable Text.Type, ETLLoadID = nullable Int32.Type, LoadDate = nullable DateTime.Type, UpdateDate = nullable DateTime.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared DimCurrency_WriteToDataDestination = let\r\n  DimCurrency_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = DimCurrency_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], DimCurrency_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  DimCurrency_WriteToDataDestination;\r\nshared DimCurrency_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(DimCurrency, {\"CurrencyKey\", \"CurrencyLabel\", \"CurrencyName\", \"CurrencyDescription\", \"ETLLoadID\", \"LoadDate\", \"UpdateDate\"})\r\nin\r\n    SourceTable;\r\nshared DimCustomer_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[ItemKind = \"Table\", Id = \"DimCustomer\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[CustomerKey = nullable Int32.Type, GeographyKey = nullable Int32.Type, CustomerLabel = nullable Text.Type, Title = nullable Text.Type, FirstName = nullable Text.Type, MiddleName = nullable Text.Type, LastName = nullable Text.Type, NameStyle = nullable Logical.Type, BirthDate = nullable Date.Type, MaritalStatus = nullable Text.Type, Suffix = nullable Text.Type, Gender = nullable Text.Type, EmailAddress = nullable Text.Type, YearlyIncome = nullable Currency.Type, TotalChildren = nullable Byte.Type, NumberChildrenAtHome = nullable Byte.Type, Education = nullable Text.Type, Occupation = nullable Text.Type, HouseOwnerFlag = nullable Text.Type, NumberCarsOwned = nullable Byte.Type, AddressLine1 = nullable Text.Type, AddressLine2 = nullable Text.Type, Phone = nullable Text.Type, DateFirstPurchase = nullable Date.Type, CustomerType = nullable Text.Type, CompanyName = nullable Text.Type, ETLLoadID = nullable Int32.Type, LoadDate = nullable DateTime.Type, UpdateDate = nullable DateTime.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared DimCustomer_WriteToDataDestination = let\r\n  DimCustomer_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = DimCustomer_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], DimCustomer_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  DimCustomer_WriteToDataDestination;\r\nshared DimCustomer_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(DimCustomer, {\"CustomerKey\", \"GeographyKey\", \"CustomerLabel\", \"Title\", \"FirstName\", \"MiddleName\", \"LastName\", \"NameStyle\", \"BirthDate\", \"MaritalStatus\", \"Suffix\", \"Gender\", \"EmailAddress\", \"YearlyIncome\", \"TotalChildren\", \"NumberChildrenAtHome\", \"Education\", \"Occupation\", \"HouseOwnerFlag\", \"NumberCarsOwned\", \"AddressLine1\", \"AddressLine2\", \"Phone\", \"DateFirstPurchase\", \"CustomerType\", \"CompanyName\", \"ETLLoadID\", \"LoadDate\", \"UpdateDate\"})\r\nin\r\n    SourceTable;\r\nshared DimDate_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[ItemKind = \"Table\", Id = \"DimDate\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[Datekey = nullable DateTime.Type, FullDateLabel = nullable Text.Type, DateDescription = nullable Text.Type, CalendarYear = nullable Int32.Type, CalendarYearLabel = nullable Text.Type, CalendarHalfYear = nullable Int32.Type, CalendarHalfYearLabel = nullable Text.Type, CalendarQuarter = nullable Int32.Type, CalendarQuarterLabel = nullable Text.Type, CalendarMonth = nullable Int32.Type, CalendarMonthLabel = nullable Text.Type, CalendarWeek = nullable Int32.Type, CalendarWeekLabel = nullable Text.Type, CalendarDayOfWeek = nullable Int32.Type, CalendarDayOfWeekLabel = nullable Text.Type, FiscalYear = nullable Int32.Type, FiscalYearLabel = nullable Text.Type, FiscalHalfYear = nullable Int32.Type, FiscalHalfYearLabel = nullable Text.Type, FiscalQuarter = nullable Int32.Type, FiscalQuarterLabel = nullable Text.Type, FiscalMonth = nullable Int32.Type, FiscalMonthLabel = nullable Text.Type, IsWorkDay = nullable Text.Type, IsHoliday = nullable Int32.Type, HolidayName = nullable Text.Type, EuropeSeason = nullable Text.Type, NorthAmericaSeason = nullable Text.Type, AsiaSeason = nullable Text.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared DimDate_WriteToDataDestination = let\r\n  DimDate_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = DimDate_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], DimDate_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  DimDate_WriteToDataDestination;\r\nshared DimDate_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(DimDate, {\"Datekey\", \"FullDateLabel\", \"DateDescription\", \"CalendarYear\", \"CalendarYearLabel\", \"CalendarHalfYear\", \"CalendarHalfYearLabel\", \"CalendarQuarter\", \"CalendarQuarterLabel\", \"CalendarMonth\", \"CalendarMonthLabel\", \"CalendarWeek\", \"CalendarWeekLabel\", \"CalendarDayOfWeek\", \"CalendarDayOfWeekLabel\", \"FiscalYear\", \"FiscalYearLabel\", \"FiscalHalfYear\", \"FiscalHalfYearLabel\", \"FiscalQuarter\", \"FiscalQuarterLabel\", \"FiscalMonth\", \"FiscalMonthLabel\", \"IsWorkDay\", \"IsHoliday\", \"HolidayName\", \"EuropeSeason\", \"NorthAmericaSeason\", \"AsiaSeason\"})\r\nin\r\n    SourceTable;\r\nshared DimGeography_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[ItemKind = \"Table\", Id = \"DimGeography\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[GeographyKey = nullable Int32.Type, GeographyType = nullable Text.Type, ContinentName = nullable Text.Type, CityName = nullable Text.Type, StateProvinceName = nullable Text.Type, RegionCountryName = nullable Text.Type, Geometry = nullable Text.Type, ETLLoadID = nullable Int32.Type, LoadDate = nullable DateTime.Type, UpdateDate = nullable DateTime.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared DimGeography_WriteToDataDestination = let\r\n  DimGeography_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = DimGeography_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], DimGeography_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  DimGeography_WriteToDataDestination;\r\nshared DimGeography_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(DimGeography, {\"GeographyKey\", \"GeographyType\", \"ContinentName\", \"CityName\", \"StateProvinceName\", \"RegionCountryName\", \"Geometry\", \"ETLLoadID\", \"LoadDate\", \"UpdateDate\"})\r\nin\r\n    SourceTable;\r\nshared DimProduct_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[ItemKind = \"Table\", Id = \"DimProduct\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[ProductKey = nullable Int32.Type, ProductLabel = nullable Text.Type, ProductName = nullable Text.Type, ProductDescription = nullable Text.Type, ProductSubcategoryKey = nullable Int32.Type, Manufacturer = nullable Text.Type, BrandName = nullable Text.Type, ClassID = nullable Text.Type, ClassName = nullable Text.Type, StyleID = nullable Text.Type, StyleName = nullable Text.Type, ColorID = nullable Text.Type, ColorName = nullable Text.Type, Size = nullable Text.Type, SizeRange = nullable Text.Type, SizeUnitMeasureID = nullable Text.Type, Weight = nullable Double.Type, WeightUnitMeasureID = nullable Text.Type, UnitOfMeasureID = nullable Text.Type, UnitOfMeasureName = nullable Text.Type, StockTypeID = nullable Text.Type, StockTypeName = nullable Text.Type, UnitCost = nullable Currency.Type, UnitPrice = nullable Currency.Type, AvailableForSaleDate = nullable DateTime.Type, StopSaleDate = nullable DateTime.Type, Status = nullable Text.Type, ImageURL = nullable Text.Type, ProductURL = nullable Text.Type, ETLLoadID = nullable Int32.Type, LoadDate = nullable DateTime.Type, UpdateDate = nullable DateTime.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared DimProduct_WriteToDataDestination = let\r\n  DimProduct_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = DimProduct_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], DimProduct_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  DimProduct_WriteToDataDestination;\r\nshared DimProduct_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(DimProduct, {\"ProductKey\", \"ProductLabel\", \"ProductName\", \"ProductDescription\", \"ProductSubcategoryKey\", \"Manufacturer\", \"BrandName\", \"ClassID\", \"ClassName\", \"StyleID\", \"StyleName\", \"ColorID\", \"ColorName\", \"Size\", \"SizeRange\", \"SizeUnitMeasureID\", \"Weight\", \"WeightUnitMeasureID\", \"UnitOfMeasureID\", \"UnitOfMeasureName\", \"StockTypeID\", \"StockTypeName\", \"UnitCost\", \"UnitPrice\", \"AvailableForSaleDate\", \"StopSaleDate\", \"Status\", \"ImageURL\", \"ProductURL\", \"ETLLoadID\", \"LoadDate\", \"UpdateDate\"})\r\nin\r\n    SourceTable;\r\nshared DimProductCategory_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[ItemKind = \"Table\", Id = \"DimProductCategory\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[ProductCategoryKey = nullable Int32.Type, ProductCategoryLabel = nullable Text.Type, ProductCategoryName = nullable Text.Type, ProductCategoryDescription = nullable Text.Type, ETLLoadID = nullable Int32.Type, LoadDate = nullable DateTime.Type, UpdateDate = nullable DateTime.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared DimProductCategory_WriteToDataDestination = let\r\n  DimProductCategory_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = DimProductCategory_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], DimProductCategory_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  DimProductCategory_WriteToDataDestination;\r\nshared DimProductCategory_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(DimProductCategory, {\"ProductCategoryKey\", \"ProductCategoryLabel\", \"ProductCategoryName\", \"ProductCategoryDescription\", \"ETLLoadID\", \"LoadDate\", \"UpdateDate\"})\r\nin\r\n    SourceTable;\r\nshared DimProductSubcategory_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[ItemKind = \"Table\", Id = \"DimProductSubcategory\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[ProductSubcategoryKey = nullable Int32.Type, ProductSubcategoryLabel = nullable Text.Type, ProductSubcategoryName = nullable Text.Type, ProductSubcategoryDescription = nullable Text.Type, ProductCategoryKey = nullable Int32.Type, ETLLoadID = nullable Int32.Type, LoadDate = nullable DateTime.Type, UpdateDate = nullable DateTime.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared DimProductSubcategory_WriteToDataDestination = let\r\n  DimProductSubcategory_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = DimProductSubcategory_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], DimProductSubcategory_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  DimProductSubcategory_WriteToDataDestination;\r\nshared DimProductSubcategory_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(DimProductSubcategory, {\"ProductSubcategoryKey\", \"ProductSubcategoryLabel\", \"ProductSubcategoryName\", \"ProductSubcategoryDescription\", \"ProductCategoryKey\", \"ETLLoadID\", \"LoadDate\", \"UpdateDate\"})\r\nin\r\n    SourceTable;\r\nshared DimPromotion_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[ItemKind = \"Table\", Id = \"DimPromotion\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[PromotionKey = nullable Int32.Type, PromotionLabel = nullable Text.Type, PromotionName = nullable Text.Type, PromotionDescription = nullable Text.Type, DiscountPercent = nullable Double.Type, PromotionType = nullable Text.Type, PromotionCategory = nullable Text.Type, StartDate = nullable DateTime.Type, EndDate = nullable DateTime.Type, MinQuantity = nullable Int32.Type, MaxQuantity = nullable Int32.Type, ETLLoadID = nullable Int32.Type, LoadDate = nullable DateTime.Type, UpdateDate = nullable DateTime.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared DimPromotion_WriteToDataDestination = let\r\n  DimPromotion_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = DimPromotion_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], DimPromotion_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  DimPromotion_WriteToDataDestination;\r\nshared DimPromotion_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(DimPromotion, {\"PromotionKey\", \"PromotionLabel\", \"PromotionName\", \"PromotionDescription\", \"DiscountPercent\", \"PromotionType\", \"PromotionCategory\", \"StartDate\", \"EndDate\", \"MinQuantity\", \"MaxQuantity\", \"ETLLoadID\", \"LoadDate\", \"UpdateDate\"})\r\nin\r\n    SourceTable;\r\nshared DimStore_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[ItemKind = \"Table\", Id = \"DimStore\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[StoreKey = nullable Int32.Type, GeographyKey = nullable Int32.Type, StoreManager = nullable Int32.Type, StoreType = nullable Text.Type, StoreName = nullable Text.Type, StoreDescription = nullable Text.Type, Status = nullable Text.Type, OpenDate = nullable DateTime.Type, CloseDate = nullable DateTime.Type, EntityKey = nullable Int32.Type, ZipCode = nullable Text.Type, ZipCodeExtension = nullable Text.Type, StorePhone = nullable Text.Type, StoreFax = nullable Text.Type, AddressLine1 = nullable Text.Type, AddressLine2 = nullable Text.Type, CloseReason = nullable Text.Type, EmployeeCount = nullable Int32.Type, SellingAreaSize = nullable Double.Type, LastRemodelDate = nullable DateTime.Type, GeoLocation = nullable Text.Type, Geometry = nullable Text.Type, ETLLoadID = nullable Int32.Type, LoadDate = nullable DateTime.Type, UpdateDate = nullable DateTime.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared DimStore_WriteToDataDestination = let\r\n  DimStore_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = DimStore_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], DimStore_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  DimStore_WriteToDataDestination;\r\nshared DimStore_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(DimStore, {\"StoreKey\", \"GeographyKey\", \"StoreManager\", \"StoreType\", \"StoreName\", \"StoreDescription\", \"Status\", \"OpenDate\", \"CloseDate\", \"EntityKey\", \"ZipCode\", \"ZipCodeExtension\", \"StorePhone\", \"StoreFax\", \"AddressLine1\", \"AddressLine2\", \"CloseReason\", \"EmployeeCount\", \"SellingAreaSize\", \"LastRemodelDate\", \"GeoLocation\", \"Geometry\", \"ETLLoadID\", \"LoadDate\", \"UpdateDate\"})\r\nin\r\n    SourceTable;\r\nshared FactOnlineSales_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[ItemKind = \"Table\", Id = \"FactOnlineSales\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[OnlineSalesKey = nullable Int32.Type, DateKey = nullable DateTime.Type, StoreKey = nullable Int32.Type, ProductKey = nullable Int32.Type, PromotionKey = nullable Int32.Type, CurrencyKey = nullable Int32.Type, CustomerKey = nullable Int32.Type, SalesOrderNumber = nullable Text.Type, SalesOrderLineNumber = nullable Int32.Type, SalesQuantity = nullable Int32.Type, SalesAmount = nullable Currency.Type, ReturnQuantity = nullable Int32.Type, ReturnAmount = nullable Currency.Type, DiscountQuantity = nullable Int32.Type, DiscountAmount = nullable Currency.Type, TotalCost = nullable Currency.Type, UnitCost = nullable Currency.Type, UnitPrice = nullable Currency.Type, ETLLoadID = nullable Int32.Type, LoadDate = nullable DateTime.Type, UpdateDate = nullable DateTime.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared FactOnlineSales_WriteToDataDestination = let\r\n  FactOnlineSales_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = FactOnlineSales_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], FactOnlineSales_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  FactOnlineSales_WriteToDataDestination;\r\nshared FactOnlineSales_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(FactOnlineSales, {\"OnlineSalesKey\", \"DateKey\", \"StoreKey\", \"ProductKey\", \"PromotionKey\", \"CurrencyKey\", \"CustomerKey\", \"SalesOrderNumber\", \"SalesOrderLineNumber\", \"SalesQuantity\", \"SalesAmount\", \"ReturnQuantity\", \"ReturnAmount\", \"DiscountQuantity\", \"DiscountAmount\", \"TotalCost\", \"UnitCost\", \"UnitPrice\", \"ETLLoadID\", \"LoadDate\", \"UpdateDate\"})\r\nin\r\n    SourceTable;\r\n","connectionOverrides":[{"path":"abelpc\\sqlexpress;ContosoRetailDW","kind":"SQL","provider":"CdsA","authenticationKind":null,"environmentName":null,"apiName":null,"connectionName":"cfde7542-fd8b-4dcf-a381-6375f4ac60f0","audience":null},{"path":"Lakehouse","kind":"Lakehouse","provider":"CdsA","authenticationKind":null,"environmentName":null,"apiName":null,"connectionName":"{\"kind\":\"Lakehouse\",\"path\":\"Lakehouse\"}","audience":null}]}}