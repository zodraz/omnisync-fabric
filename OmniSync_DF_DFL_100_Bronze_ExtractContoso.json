{"name":"OmniSync_DF_DFL_100_Bronze_ExtractContoso","ppdf:dataflowId":"328a049b-d8ed-4816-89ea-03cfa734913f","ppdf:owner":{"tenantId":"4f5d44e6-db5c-40c0-a4d6-c0fd8d824e15","userId":"05f9dbf8-3e61-43a5-8ae6-a57ece430f3e"},"ppdf:fastCopy":true,"version":"1.0","culture":"en-US","modifiedTime":"2025-03-31T20:08:01.6843665+00:00","ppdf:outputFileFormat":"Parquet","pbi:mashup":{"fastCombine":false,"allowNativeQueries":true,"queriesMetadata":{"DefaultDestination":{"queryId":"fd406469-62b2-4b1a-a2e4-ccdf6b03adea","queryName":"DefaultDestination"},"DimCurrency":{"queryId":"564187b0-c939-4dc1-8e71-bf9d0d4fec96","queryName":"DimCurrency"},"DimCustomer":{"queryId":"f7da6870-fd09-4565-906b-bc9420af9109","queryName":"DimCustomer"},"DimDate":{"queryId":"481f4454-9a92-4b35-8a69-6938a82bdb77","queryName":"DimDate"},"DimGeography":{"queryId":"401c01e3-727f-47b0-9b78-bb730f1ed6f5","queryName":"DimGeography"},"DimProduct":{"queryId":"9902dc48-14ab-4b37-b462-54aa0b3e952d","queryName":"DimProduct"},"DimProductCategory":{"queryId":"b158797c-178f-4f29-9ddb-0929124fc19d","queryName":"DimProductCategory"},"DimProductSubcategory":{"queryId":"0382c7cb-f7cc-472b-a547-188e0d18b6b0","queryName":"DimProductSubcategory"},"DimStore":{"queryId":"fb37d8ef-9e20-40a2-8b73-fbc758e06328","queryName":"DimStore"},"FactOnlineSales":{"queryId":"bb2c97e2-bdcd-46e3-894b-8da4c2b897bb","queryName":"FactOnlineSales"},"DimCurrency_DataDestination":{"queryId":"d37e7414-96dc-42af-bce4-d838ccfc26d0","queryName":"DimCurrency_DataDestination"},"DimCurrency_WriteToDataDestination":{"queryId":"a996b226-b515-4eef-aed2-e7ceae4166cb","queryName":"DimCurrency_WriteToDataDestination"},"DimCurrency_TransformForWriteToDataDestination":{"queryId":"42f3fd9f-cc93-4aa2-b0b3-3f7ef6801fe9","queryName":"DimCurrency_TransformForWriteToDataDestination"},"DefaultStaging":{"queryId":"9fe31821-1e0d-4b8e-9fe9-95299a34031c","queryName":"DefaultStaging"},"FastCopyStaging":{"queryId":"ef47b8d2-04d3-46df-93a3-5a318462ffa6","queryName":"FastCopyStaging"},"DimCustomer_DataDestination":{"queryId":"a69ba3f0-6ad4-4778-ad84-ebc20ba6b966","queryName":"DimCustomer_DataDestination"},"DimCustomer_WriteToDataDestination":{"queryId":"15cee1a1-c59f-4bba-a403-108b09bf84a0","queryName":"DimCustomer_WriteToDataDestination"},"DimCustomer_TransformForWriteToDataDestination":{"queryId":"af3bd307-1a59-4946-bebd-60ab0bc3dee7","queryName":"DimCustomer_TransformForWriteToDataDestination"},"DimDate_DataDestination":{"queryId":"26a401eb-566d-421d-911c-c2d4b066b2ab","queryName":"DimDate_DataDestination"},"DimDate_WriteToDataDestination":{"queryId":"d8549a49-fbc6-47dc-b3dd-0a649a1308ec","queryName":"DimDate_WriteToDataDestination"},"DimDate_TransformForWriteToDataDestination":{"queryId":"9708b2ee-4fe8-4dc3-b114-b7fe20b34564","queryName":"DimDate_TransformForWriteToDataDestination"},"DimGeography_DataDestination":{"queryId":"807d3a96-529d-4d1e-afa5-3ba45a05d7e6","queryName":"DimGeography_DataDestination"},"DimGeography_WriteToDataDestination":{"queryId":"4c1af082-682c-4d68-bbbc-c320cda9abbb","queryName":"DimGeography_WriteToDataDestination"},"DimGeography_TransformForWriteToDataDestination":{"queryId":"ee0ab959-c848-427a-afc7-dc8097aba007","queryName":"DimGeography_TransformForWriteToDataDestination"},"DimProduct_DataDestination":{"queryId":"11aeb8e8-3f48-4592-81a8-da08faeb2abb","queryName":"DimProduct_DataDestination"},"DimProduct_WriteToDataDestination":{"queryId":"c1319948-2b65-4c1c-b791-b58a10ae29c4","queryName":"DimProduct_WriteToDataDestination"},"DimProduct_TransformForWriteToDataDestination":{"queryId":"3058c2b8-b7cb-4c09-8072-9a26304c4498","queryName":"DimProduct_TransformForWriteToDataDestination"},"DimProductCategory_DataDestination":{"queryId":"f5ebf3d6-be55-4023-b43d-acb671d0e8cd","queryName":"DimProductCategory_DataDestination"},"DimProductCategory_WriteToDataDestination":{"queryId":"e15a2fbf-957c-43d0-afcf-d10bfc1b1ddd","queryName":"DimProductCategory_WriteToDataDestination"},"DimProductCategory_TransformForWriteToDataDestination":{"queryId":"6938e665-19fd-4037-bdca-e2c9ae627452","queryName":"DimProductCategory_TransformForWriteToDataDestination"},"DimProductSubcategory_DataDestination":{"queryId":"652ae194-83d4-47f9-95e6-1276763cda2e","queryName":"DimProductSubcategory_DataDestination"},"DimProductSubcategory_WriteToDataDestination":{"queryId":"54ff8427-d06b-40f7-80c9-cd21e38617c5","queryName":"DimProductSubcategory_WriteToDataDestination"},"DimProductSubcategory_TransformForWriteToDataDestination":{"queryId":"d5bb1670-d4c7-4519-a991-15ab2a26509d","queryName":"DimProductSubcategory_TransformForWriteToDataDestination"},"DimStore_DataDestination":{"queryId":"fbe6dcca-1832-41ae-9316-d352c4fdf793","queryName":"DimStore_DataDestination"},"DimStore_WriteToDataDestination":{"queryId":"8de4bda6-90b1-47b6-8f18-77c0e480293e","queryName":"DimStore_WriteToDataDestination"},"DimStore_TransformForWriteToDataDestination":{"queryId":"964e807b-c14b-4e96-b229-bd879743c3b8","queryName":"DimStore_TransformForWriteToDataDestination"},"FactOnlineSales_DataDestination":{"queryId":"1a7f6b85-10d6-486e-91e6-1fc1f1eb5a00","queryName":"FactOnlineSales_DataDestination"},"FactOnlineSales_WriteToDataDestination":{"queryId":"5dd498ab-bffe-4068-98c0-342302ddcada","queryName":"FactOnlineSales_WriteToDataDestination"},"FactOnlineSales_TransformForWriteToDataDestination":{"queryId":"9f5cf648-1012-4c43-ad8a-61ad38359be5","queryName":"FactOnlineSales_TransformForWriteToDataDestination"}},"document":"section Section1;\r\nshared DefaultDestination = let\r\n  Source = Lakehouse.Contents([CreateNavigationProperties = false]),\r\n  #\"Navigation 1\" = Source{[workspaceId = \"6b35ae7a-875a-4e1a-8f60-9f0a22d0e0d0\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[lakehouseId = \"4091faae-0bfd-4c88-84fe-efd3155983b6\"]}[Data]\r\nin\r\n  #\"Navigation 2\";\r\nshared DimCurrency = let\r\n  Source = Sql.Database(\"AbelPC\\SQLEXPRESS\", \"ContosoRetailDW\"),\r\n  #\"Navigation 1\" = Source{[Schema = \"dbo\", Item = \"DimCurrency\"]}[Data]\r\nin\r\n  #\"Navigation 1\";\r\nshared DimCustomer = let\r\n  Source = Sql.Database(\"AbelPC\\SQLEXPRESS\", \"ContosoRetailDW\"),\r\n  #\"Navigation 1\" = Source{[Schema = \"dbo\", Item = \"DimCustomer\"]}[Data]\r\nin\r\n  #\"Navigation 1\";\r\nshared DimDate = let\r\n  Source = Sql.Database(\"AbelPC\\SQLEXPRESS\", \"ContosoRetailDW\"),\r\n  #\"Navigation 1\" = Source{[Schema = \"dbo\", Item = \"DimDate\"]}[Data]\r\nin\r\n  #\"Navigation 1\";\r\nshared DimGeography = let\r\n  Source = Sql.Database(\"AbelPC\\SQLEXPRESS\", \"ContosoRetailDW\"),\r\n  #\"Navigation 1\" = Source{[Schema = \"dbo\", Item = \"DimGeography\"]}[Data]\r\nin\r\n  #\"Navigation 1\";\r\nshared DimProduct = let\r\n  Source = Sql.Database(\"AbelPC\\SQLEXPRESS\", \"ContosoRetailDW\"),\r\n  #\"Navigation 1\" = Source{[Schema = \"dbo\", Item = \"DimProduct\"]}[Data]\r\nin\r\n  #\"Navigation 1\";\r\nshared DimProductCategory = let\r\n  Source = Sql.Database(\"AbelPC\\SQLEXPRESS\", \"ContosoRetailDW\"),\r\n  #\"Navigation 1\" = Source{[Schema = \"dbo\", Item = \"DimProductCategory\"]}[Data]\r\nin\r\n  #\"Navigation 1\";\r\nshared DimProductSubcategory = let\r\n  Source = Sql.Database(\"AbelPC\\SQLEXPRESS\", \"ContosoRetailDW\"),\r\n  #\"Navigation 1\" = Source{[Schema = \"dbo\", Item = \"DimProductSubcategory\"]}[Data]\r\nin\r\n  #\"Navigation 1\";\r\nshared DimStore = let\r\n  Source = Sql.Database(\"AbelPC\\SQLEXPRESS\", \"ContosoRetailDW\"),\r\n  #\"Navigation 1\" = Source{[Schema = \"dbo\", Item = \"DimStore\"]}[Data]\r\nin\r\n  #\"Navigation 1\";\r\nshared FactOnlineSales = let\r\n  Source = Sql.Database(\"AbelPC\\SQLEXPRESS\", \"ContosoRetailDW\"),\r\n  #\"Navigation 1\" = Source{[Schema = \"dbo\", Item = \"FactOnlineSales\"]}[Data]\r\nin\r\n  #\"Navigation 1\";\r\nshared DimCurrency_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[ItemKind = \"Table\", Id = \"DimCurrency\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[CurrencyKey = nullable Int32.Type, CurrencyLabel = nullable Text.Type, CurrencyName = nullable Text.Type, CurrencyDescription = nullable Text.Type, ETLLoadID = nullable Int32.Type, LoadDate = nullable DateTime.Type, UpdateDate = nullable DateTime.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared DimCurrency_WriteToDataDestination = let\r\n  DimCurrency_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = DimCurrency_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], DimCurrency_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  DimCurrency_WriteToDataDestination;\r\nshared DimCurrency_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(DimCurrency, {\"CurrencyKey\", \"CurrencyLabel\", \"CurrencyName\", \"CurrencyDescription\", \"ETLLoadID\", \"LoadDate\", \"UpdateDate\"})\r\nin\r\n    SourceTable;\r\nshared DefaultStaging = let\r\n  DefaultStaging = Pipeline.DefaultModelStorage()\r\nin\r\n  DefaultStaging;\r\nshared FastCopyStaging = let\r\n  FastCopyStaging = Pipeline.FastCopyModelStorage(DefaultStaging, [Required = false])\r\nin\r\n  FastCopyStaging;\r\nshared DimCustomer_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[ItemKind = \"Table\", Id = \"DimCustomer\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[CustomerKey = nullable Int32.Type, GeographyKey = nullable Int32.Type, CustomerLabel = nullable Text.Type, Title = nullable Text.Type, FirstName = nullable Text.Type, MiddleName = nullable Text.Type, LastName = nullable Text.Type, NameStyle = nullable Logical.Type, BirthDate = nullable Date.Type, MaritalStatus = nullable Text.Type, Suffix = nullable Text.Type, Gender = nullable Text.Type, EmailAddress = nullable Text.Type, YearlyIncome = nullable Currency.Type, TotalChildren = nullable Byte.Type, NumberChildrenAtHome = nullable Byte.Type, Education = nullable Text.Type, Occupation = nullable Text.Type, HouseOwnerFlag = nullable Text.Type, NumberCarsOwned = nullable Byte.Type, AddressLine1 = nullable Text.Type, AddressLine2 = nullable Text.Type, Phone = nullable Text.Type, DateFirstPurchase = nullable Date.Type, CustomerType = nullable Text.Type, CompanyName = nullable Text.Type, ETLLoadID = nullable Int32.Type, LoadDate = nullable DateTime.Type, UpdateDate = nullable DateTime.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared DimCustomer_WriteToDataDestination = let\r\n  DimCustomer_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = DimCustomer_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], DimCustomer_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  DimCustomer_WriteToDataDestination;\r\nshared DimCustomer_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(DimCustomer, {\"CustomerKey\", \"GeographyKey\", \"CustomerLabel\", \"Title\", \"FirstName\", \"MiddleName\", \"LastName\", \"NameStyle\", \"BirthDate\", \"MaritalStatus\", \"Suffix\", \"Gender\", \"EmailAddress\", \"YearlyIncome\", \"TotalChildren\", \"NumberChildrenAtHome\", \"Education\", \"Occupation\", \"HouseOwnerFlag\", \"NumberCarsOwned\", \"AddressLine1\", \"AddressLine2\", \"Phone\", \"DateFirstPurchase\", \"CustomerType\", \"CompanyName\", \"ETLLoadID\", \"LoadDate\", \"UpdateDate\"})\r\nin\r\n    SourceTable;\r\nshared DimDate_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[ItemKind = \"Table\", Id = \"DimDate\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[Datekey = nullable DateTime.Type, FullDateLabel = nullable Text.Type, DateDescription = nullable Text.Type, CalendarYear = nullable Int32.Type, CalendarYearLabel = nullable Text.Type, CalendarHalfYear = nullable Int32.Type, CalendarHalfYearLabel = nullable Text.Type, CalendarQuarter = nullable Int32.Type, CalendarQuarterLabel = nullable Text.Type, CalendarMonth = nullable Int32.Type, CalendarMonthLabel = nullable Text.Type, CalendarWeek = nullable Int32.Type, CalendarWeekLabel = nullable Text.Type, CalendarDayOfWeek = nullable Int32.Type, CalendarDayOfWeekLabel = nullable Text.Type, FiscalYear = nullable Int32.Type, FiscalYearLabel = nullable Text.Type, FiscalHalfYear = nullable Int32.Type, FiscalHalfYearLabel = nullable Text.Type, FiscalQuarter = nullable Int32.Type, FiscalQuarterLabel = nullable Text.Type, FiscalMonth = nullable Int32.Type, FiscalMonthLabel = nullable Text.Type, IsWorkDay = nullable Text.Type, IsHoliday = nullable Int32.Type, HolidayName = nullable Text.Type, EuropeSeason = nullable Text.Type, NorthAmericaSeason = nullable Text.Type, AsiaSeason = nullable Text.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared DimDate_WriteToDataDestination = let\r\n  DimDate_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = DimDate_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], DimDate_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  DimDate_WriteToDataDestination;\r\nshared DimDate_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(DimDate, {\"Datekey\", \"FullDateLabel\", \"DateDescription\", \"CalendarYear\", \"CalendarYearLabel\", \"CalendarHalfYear\", \"CalendarHalfYearLabel\", \"CalendarQuarter\", \"CalendarQuarterLabel\", \"CalendarMonth\", \"CalendarMonthLabel\", \"CalendarWeek\", \"CalendarWeekLabel\", \"CalendarDayOfWeek\", \"CalendarDayOfWeekLabel\", \"FiscalYear\", \"FiscalYearLabel\", \"FiscalHalfYear\", \"FiscalHalfYearLabel\", \"FiscalQuarter\", \"FiscalQuarterLabel\", \"FiscalMonth\", \"FiscalMonthLabel\", \"IsWorkDay\", \"IsHoliday\", \"HolidayName\", \"EuropeSeason\", \"NorthAmericaSeason\", \"AsiaSeason\"})\r\nin\r\n    SourceTable;\r\nshared DimGeography_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[ItemKind = \"Table\", Id = \"DimGeography\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[GeographyKey = nullable Int32.Type, GeographyType = nullable Text.Type, ContinentName = nullable Text.Type, CityName = nullable Text.Type, StateProvinceName = nullable Text.Type, RegionCountryName = nullable Text.Type, Geometry = nullable Text.Type, ETLLoadID = nullable Int32.Type, LoadDate = nullable DateTime.Type, UpdateDate = nullable DateTime.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared DimGeography_WriteToDataDestination = let\r\n  DimGeography_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = DimGeography_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], DimGeography_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  DimGeography_WriteToDataDestination;\r\nshared DimGeography_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(DimGeography, {\"GeographyKey\", \"GeographyType\", \"ContinentName\", \"CityName\", \"StateProvinceName\", \"RegionCountryName\", \"Geometry\", \"ETLLoadID\", \"LoadDate\", \"UpdateDate\"})\r\nin\r\n    SourceTable;\r\nshared DimProduct_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[ItemKind = \"Table\", Id = \"DimProduct\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[ProductKey = nullable Int32.Type, ProductLabel = nullable Text.Type, ProductName = nullable Text.Type, ProductDescription = nullable Text.Type, ProductSubcategoryKey = nullable Int32.Type, Manufacturer = nullable Text.Type, BrandName = nullable Text.Type, ClassID = nullable Text.Type, ClassName = nullable Text.Type, StyleID = nullable Text.Type, StyleName = nullable Text.Type, ColorID = nullable Text.Type, ColorName = nullable Text.Type, Size = nullable Text.Type, SizeRange = nullable Text.Type, SizeUnitMeasureID = nullable Text.Type, Weight = nullable Double.Type, WeightUnitMeasureID = nullable Text.Type, UnitOfMeasureID = nullable Text.Type, UnitOfMeasureName = nullable Text.Type, StockTypeID = nullable Text.Type, StockTypeName = nullable Text.Type, UnitCost = nullable Currency.Type, UnitPrice = nullable Currency.Type, AvailableForSaleDate = nullable DateTime.Type, StopSaleDate = nullable DateTime.Type, Status = nullable Text.Type, ImageURL = nullable Text.Type, ProductURL = nullable Text.Type, ETLLoadID = nullable Int32.Type, LoadDate = nullable DateTime.Type, UpdateDate = nullable DateTime.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared DimProduct_WriteToDataDestination = let\r\n  DimProduct_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = DimProduct_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], DimProduct_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  DimProduct_WriteToDataDestination;\r\nshared DimProduct_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(DimProduct, {\"ProductKey\", \"ProductLabel\", \"ProductName\", \"ProductDescription\", \"ProductSubcategoryKey\", \"Manufacturer\", \"BrandName\", \"ClassID\", \"ClassName\", \"StyleID\", \"StyleName\", \"ColorID\", \"ColorName\", \"Size\", \"SizeRange\", \"SizeUnitMeasureID\", \"Weight\", \"WeightUnitMeasureID\", \"UnitOfMeasureID\", \"UnitOfMeasureName\", \"StockTypeID\", \"StockTypeName\", \"UnitCost\", \"UnitPrice\", \"AvailableForSaleDate\", \"StopSaleDate\", \"Status\", \"ImageURL\", \"ProductURL\", \"ETLLoadID\", \"LoadDate\", \"UpdateDate\"})\r\nin\r\n    SourceTable;\r\nshared DimProductCategory_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[ItemKind = \"Table\", Id = \"DimProductCategory\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[ProductCategoryKey = nullable Int32.Type, ProductCategoryLabel = nullable Text.Type, ProductCategoryName = nullable Text.Type, ProductCategoryDescription = nullable Text.Type, ETLLoadID = nullable Int32.Type, LoadDate = nullable DateTime.Type, UpdateDate = nullable DateTime.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared DimProductCategory_WriteToDataDestination = let\r\n  DimProductCategory_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = DimProductCategory_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], DimProductCategory_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  DimProductCategory_WriteToDataDestination;\r\nshared DimProductCategory_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(DimProductCategory, {\"ProductCategoryKey\", \"ProductCategoryLabel\", \"ProductCategoryName\", \"ProductCategoryDescription\", \"ETLLoadID\", \"LoadDate\", \"UpdateDate\"})\r\nin\r\n    SourceTable;\r\nshared DimProductSubcategory_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[ItemKind = \"Table\", Id = \"DimProductSubcategory\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[ProductSubcategoryKey = nullable Int32.Type, ProductSubcategoryLabel = nullable Text.Type, ProductSubcategoryName = nullable Text.Type, ProductSubcategoryDescription = nullable Text.Type, ProductCategoryKey = nullable Int32.Type, ETLLoadID = nullable Int32.Type, LoadDate = nullable DateTime.Type, UpdateDate = nullable DateTime.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared DimProductSubcategory_WriteToDataDestination = let\r\n  DimProductSubcategory_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = DimProductSubcategory_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], DimProductSubcategory_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  DimProductSubcategory_WriteToDataDestination;\r\nshared DimProductSubcategory_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(DimProductSubcategory, {\"ProductSubcategoryKey\", \"ProductSubcategoryLabel\", \"ProductSubcategoryName\", \"ProductSubcategoryDescription\", \"ProductCategoryKey\", \"ETLLoadID\", \"LoadDate\", \"UpdateDate\"})\r\nin\r\n    SourceTable;\r\nshared DimStore_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[ItemKind = \"Table\", Id = \"DimStore\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[StoreKey = nullable Int32.Type, GeographyKey = nullable Int32.Type, StoreManager = nullable Int32.Type, StoreType = nullable Text.Type, StoreName = nullable Text.Type, StoreDescription = nullable Text.Type, Status = nullable Text.Type, OpenDate = nullable DateTime.Type, CloseDate = nullable DateTime.Type, EntityKey = nullable Int32.Type, ZipCode = nullable Text.Type, ZipCodeExtension = nullable Text.Type, StorePhone = nullable Text.Type, StoreFax = nullable Text.Type, AddressLine1 = nullable Text.Type, AddressLine2 = nullable Text.Type, CloseReason = nullable Text.Type, EmployeeCount = nullable Int32.Type, SellingAreaSize = nullable Double.Type, LastRemodelDate = nullable DateTime.Type, GeoLocation = nullable Text.Type, Geometry = nullable Text.Type, ETLLoadID = nullable Int32.Type, LoadDate = nullable DateTime.Type, UpdateDate = nullable DateTime.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared DimStore_WriteToDataDestination = let\r\n  DimStore_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = DimStore_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], DimStore_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  DimStore_WriteToDataDestination;\r\nshared DimStore_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(DimStore, {\"StoreKey\", \"GeographyKey\", \"StoreManager\", \"StoreType\", \"StoreName\", \"StoreDescription\", \"Status\", \"OpenDate\", \"CloseDate\", \"EntityKey\", \"ZipCode\", \"ZipCodeExtension\", \"StorePhone\", \"StoreFax\", \"AddressLine1\", \"AddressLine2\", \"CloseReason\", \"EmployeeCount\", \"SellingAreaSize\", \"LastRemodelDate\", \"GeoLocation\", \"Geometry\", \"ETLLoadID\", \"LoadDate\", \"UpdateDate\"})\r\nin\r\n    SourceTable;\r\nshared FactOnlineSales_DataDestination = let\r\n  Target = DefaultDestination,\r\n  TableNavigation = Target{[ItemKind = \"Table\", Id = \"FactOnlineSales\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[OnlineSalesKey = nullable Int32.Type, DateKey = nullable DateTime.Type, StoreKey = nullable Int32.Type, ProductKey = nullable Int32.Type, PromotionKey = nullable Int32.Type, CurrencyKey = nullable Int32.Type, CustomerKey = nullable Int32.Type, SalesOrderNumber = nullable Text.Type, SalesOrderLineNumber = nullable Int32.Type, SalesQuantity = nullable Int32.Type, SalesAmount = nullable Currency.Type, ReturnQuantity = nullable Int32.Type, ReturnAmount = nullable Currency.Type, DiscountQuantity = nullable Int32.Type, DiscountAmount = nullable Currency.Type, TotalCost = nullable Currency.Type, UnitCost = nullable Currency.Type, UnitPrice = nullable Currency.Type, ETLLoadID = nullable Int32.Type, LoadDate = nullable DateTime.Type, UpdateDate = nullable DateTime.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared FactOnlineSales_WriteToDataDestination = let\r\n  FactOnlineSales_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = FactOnlineSales_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], FactOnlineSales_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  FactOnlineSales_WriteToDataDestination;\r\nshared FactOnlineSales_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(FactOnlineSales, {\"OnlineSalesKey\", \"DateKey\", \"StoreKey\", \"ProductKey\", \"PromotionKey\", \"CurrencyKey\", \"CustomerKey\", \"SalesOrderNumber\", \"SalesOrderLineNumber\", \"SalesQuantity\", \"SalesAmount\", \"ReturnQuantity\", \"ReturnAmount\", \"DiscountQuantity\", \"DiscountAmount\", \"TotalCost\", \"UnitCost\", \"UnitPrice\", \"ETLLoadID\", \"LoadDate\", \"UpdateDate\"})\r\nin\r\n    SourceTable;\r\n","connectionOverrides":[{"path":"abelpc\\sqlexpress;ContosoRetailDW","kind":"SQL","provider":"CdsA","authenticationKind":null,"environmentName":null,"apiName":null,"connectionName":"cfde7542-fd8b-4dcf-a381-6375f4ac60f0","audience":null},{"path":"Lakehouse","kind":"Lakehouse","provider":"CdsA","authenticationKind":null,"environmentName":null,"apiName":null,"connectionName":"{\"kind\":\"Lakehouse\",\"path\":\"Lakehouse\"}","audience":null}]}}